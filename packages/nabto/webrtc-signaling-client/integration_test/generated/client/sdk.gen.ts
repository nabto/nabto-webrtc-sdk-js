// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { PostV1ClientConnectData, PostV1ClientConnectResponse, PostV1ClientConnectError, PostV1DeviceConnectData, PostV1DeviceConnectResponse, PostV1DeviceConnectError, PostTestClientData, PostTestClientResponse, PostTestClientError, PostTestClientByTestIdConnectDeviceData, PostTestClientByTestIdConnectDeviceResponse, PostTestClientByTestIdConnectDeviceError, PostTestClientByTestIdDisconnectDeviceData, PostTestClientByTestIdDisconnectDeviceResponse, PostTestClientByTestIdDisconnectDeviceError, PostTestClientByTestIdDropDeviceMessagesData, PostTestClientByTestIdDropDeviceMessagesResponse, PostTestClientByTestIdDropDeviceMessagesError, PostTestClientByTestIdDisconnectClientData, PostTestClientByTestIdDisconnectClientResponse, PostTestClientByTestIdDisconnectClientError, PostTestClientByTestIdDropClientMessagesData, PostTestClientByTestIdDropClientMessagesResponse, PostTestClientByTestIdDropClientMessagesError, PostTestClientByTestIdWaitForDeviceMessagesData, PostTestClientByTestIdWaitForDeviceMessagesResponse, PostTestClientByTestIdWaitForDeviceMessagesError, PostTestClientByTestIdSendDeviceMessagesData, PostTestClientByTestIdSendDeviceMessagesResponse, PostTestClientByTestIdSendDeviceMessagesError, PostTestClientByTestIdSendDeviceErrorData, PostTestClientByTestIdSendDeviceErrorResponse, PostTestClientByTestIdSendDeviceErrorError, PostTestClientByTestIdSendNewMessageTypeData, PostTestClientByTestIdSendNewMessageTypeResponse, PostTestClientByTestIdSendNewMessageTypeError, DeleteTestClientByTestIdData, DeleteTestClientByTestIdResponse, PostTestDeviceData, PostTestDeviceResponse, PostTestDeviceError, PostTestDeviceByTestIdClientsData, PostTestDeviceByTestIdClientsResponse, PostTestDeviceByTestIdClientsError, PostTestDeviceByTestIdClientsByClientIdConnectData, PostTestDeviceByTestIdClientsByClientIdConnectResponse, PostTestDeviceByTestIdClientsByClientIdConnectError, PostTestDeviceByTestIdClientsByClientIdDisconnectData, PostTestDeviceByTestIdClientsByClientIdDisconnectResponse, PostTestDeviceByTestIdClientsByClientIdDisconnectError, PostTestDeviceByTestIdClientsByClientIdDropClientMessagesData, PostTestDeviceByTestIdClientsByClientIdDropClientMessagesResponse, PostTestDeviceByTestIdClientsByClientIdDropClientMessagesError, PostTestDeviceByTestIdDisconnectDeviceData, PostTestDeviceByTestIdDisconnectDeviceResponse, PostTestDeviceByTestIdDisconnectDeviceError, PostTestDeviceByTestIdDropDeviceMessagesData, PostTestDeviceByTestIdDropDeviceMessagesResponse, PostTestDeviceByTestIdDropDeviceMessagesError, PostTestDeviceByTestIdClientsByClientIdWaitForMessagesData, PostTestDeviceByTestIdClientsByClientIdWaitForMessagesResponse, PostTestDeviceByTestIdClientsByClientIdWaitForMessagesError, PostTestDeviceByTestIdClientsByClientIdSendMessagesData, PostTestDeviceByTestIdClientsByClientIdSendMessagesResponse, PostTestDeviceByTestIdClientsByClientIdSendMessagesError, PostTestDeviceByTestIdClientsByClientIdSendErrorData, PostTestDeviceByTestIdClientsByClientIdSendErrorResponse, PostTestDeviceByTestIdClientsByClientIdSendErrorError, PostTestDeviceByTestIdSendNewMessageTypeData, PostTestDeviceByTestIdSendNewMessageTypeResponse, PostTestDeviceByTestIdSendNewMessageTypeError, DeleteTestDeviceByTestIdData, DeleteTestDeviceByTestIdResponse, PostTestDeviceByTestIdClientsByClientIdWaitForErrorData, PostTestDeviceByTestIdClientsByClientIdWaitForErrorResponse, PostTestDeviceByTestIdClientsByClientIdWaitForErrorError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const postV1ClientConnect = <ThrowOnError extends boolean = false>(options: Options<PostV1ClientConnectData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1ClientConnectResponse, PostV1ClientConnectError, ThrowOnError>({
        url: '/v1/client/connect',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postV1DeviceConnect = <ThrowOnError extends boolean = false>(options: Options<PostV1DeviceConnectData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1DeviceConnectResponse, PostV1DeviceConnectError, ThrowOnError>({
        url: '/v1/device/connect',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postTestClient = <ThrowOnError extends boolean = false>(options: Options<PostTestClientData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestClientResponse, PostTestClientError, ThrowOnError>({
        url: '/test/client/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postTestClientByTestIdConnectDevice = <ThrowOnError extends boolean = false>(options: Options<PostTestClientByTestIdConnectDeviceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestClientByTestIdConnectDeviceResponse, PostTestClientByTestIdConnectDeviceError, ThrowOnError>({
        url: '/test/client/{testId}/connect-device',
        ...options
    });
};

export const postTestClientByTestIdDisconnectDevice = <ThrowOnError extends boolean = false>(options: Options<PostTestClientByTestIdDisconnectDeviceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestClientByTestIdDisconnectDeviceResponse, PostTestClientByTestIdDisconnectDeviceError, ThrowOnError>({
        url: '/test/client/{testId}/disconnect-device',
        ...options
    });
};

export const postTestClientByTestIdDropDeviceMessages = <ThrowOnError extends boolean = false>(options: Options<PostTestClientByTestIdDropDeviceMessagesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestClientByTestIdDropDeviceMessagesResponse, PostTestClientByTestIdDropDeviceMessagesError, ThrowOnError>({
        url: '/test/client/{testId}/drop-device-messages',
        ...options
    });
};

export const postTestClientByTestIdDisconnectClient = <ThrowOnError extends boolean = false>(options: Options<PostTestClientByTestIdDisconnectClientData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestClientByTestIdDisconnectClientResponse, PostTestClientByTestIdDisconnectClientError, ThrowOnError>({
        url: '/test/client/{testId}/disconnect-client',
        ...options
    });
};

export const postTestClientByTestIdDropClientMessages = <ThrowOnError extends boolean = false>(options: Options<PostTestClientByTestIdDropClientMessagesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestClientByTestIdDropClientMessagesResponse, PostTestClientByTestIdDropClientMessagesError, ThrowOnError>({
        url: '/test/client/{testId}/drop-client-messages',
        ...options
    });
};

export const postTestClientByTestIdWaitForDeviceMessages = <ThrowOnError extends boolean = false>(options: Options<PostTestClientByTestIdWaitForDeviceMessagesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestClientByTestIdWaitForDeviceMessagesResponse, PostTestClientByTestIdWaitForDeviceMessagesError, ThrowOnError>({
        url: '/test/client/{testId}/wait-for-device-messages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postTestClientByTestIdSendDeviceMessages = <ThrowOnError extends boolean = false>(options: Options<PostTestClientByTestIdSendDeviceMessagesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestClientByTestIdSendDeviceMessagesResponse, PostTestClientByTestIdSendDeviceMessagesError, ThrowOnError>({
        url: '/test/client/{testId}/send-device-messages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postTestClientByTestIdSendDeviceError = <ThrowOnError extends boolean = false>(options: Options<PostTestClientByTestIdSendDeviceErrorData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestClientByTestIdSendDeviceErrorResponse, PostTestClientByTestIdSendDeviceErrorError, ThrowOnError>({
        url: '/test/client/{testId}/send-device-error',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postTestClientByTestIdSendNewMessageType = <ThrowOnError extends boolean = false>(options: Options<PostTestClientByTestIdSendNewMessageTypeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestClientByTestIdSendNewMessageTypeResponse, PostTestClientByTestIdSendNewMessageTypeError, ThrowOnError>({
        url: '/test/client/{testId}/send-new-message-type',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteTestClientByTestId = <ThrowOnError extends boolean = false>(options: Options<DeleteTestClientByTestIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteTestClientByTestIdResponse, unknown, ThrowOnError>({
        url: '/test/client/{testId}',
        ...options
    });
};

export const postTestDevice = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceResponse, PostTestDeviceError, ThrowOnError>({
        url: '/test/device/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postTestDeviceByTestIdClients = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdClientsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdClientsResponse, PostTestDeviceByTestIdClientsError, ThrowOnError>({
        url: '/test/device/{testId}/clients',
        ...options
    });
};

export const postTestDeviceByTestIdClientsByClientIdConnect = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdClientsByClientIdConnectData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdClientsByClientIdConnectResponse, PostTestDeviceByTestIdClientsByClientIdConnectError, ThrowOnError>({
        url: '/test/device/{testId}/clients/{clientId}/connect',
        ...options
    });
};

export const postTestDeviceByTestIdClientsByClientIdDisconnect = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdClientsByClientIdDisconnectData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdClientsByClientIdDisconnectResponse, PostTestDeviceByTestIdClientsByClientIdDisconnectError, ThrowOnError>({
        url: '/test/device/{testId}/clients/{clientId}/disconnect',
        ...options
    });
};

export const postTestDeviceByTestIdClientsByClientIdDropClientMessages = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdClientsByClientIdDropClientMessagesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdClientsByClientIdDropClientMessagesResponse, PostTestDeviceByTestIdClientsByClientIdDropClientMessagesError, ThrowOnError>({
        url: '/test/device/{testId}/clients/{clientId}/drop-client-messages',
        ...options
    });
};

export const postTestDeviceByTestIdDisconnectDevice = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdDisconnectDeviceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdDisconnectDeviceResponse, PostTestDeviceByTestIdDisconnectDeviceError, ThrowOnError>({
        url: '/test/device/{testId}/disconnect-device',
        ...options
    });
};

export const postTestDeviceByTestIdDropDeviceMessages = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdDropDeviceMessagesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdDropDeviceMessagesResponse, PostTestDeviceByTestIdDropDeviceMessagesError, ThrowOnError>({
        url: '/test/device/{testId}/drop-device-messages',
        ...options
    });
};

export const postTestDeviceByTestIdClientsByClientIdWaitForMessages = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdClientsByClientIdWaitForMessagesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdClientsByClientIdWaitForMessagesResponse, PostTestDeviceByTestIdClientsByClientIdWaitForMessagesError, ThrowOnError>({
        url: '/test/device/{testId}/clients/{clientId}/wait-for-messages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postTestDeviceByTestIdClientsByClientIdSendMessages = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdClientsByClientIdSendMessagesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdClientsByClientIdSendMessagesResponse, PostTestDeviceByTestIdClientsByClientIdSendMessagesError, ThrowOnError>({
        url: '/test/device/{testId}/clients/{clientId}/send-messages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postTestDeviceByTestIdClientsByClientIdSendError = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdClientsByClientIdSendErrorData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdClientsByClientIdSendErrorResponse, PostTestDeviceByTestIdClientsByClientIdSendErrorError, ThrowOnError>({
        url: '/test/device/{testId}/clients/{clientId}/send-error',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postTestDeviceByTestIdSendNewMessageType = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdSendNewMessageTypeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdSendNewMessageTypeResponse, PostTestDeviceByTestIdSendNewMessageTypeError, ThrowOnError>({
        url: '/test/device/{testId}/send-new-message-type',
        ...options
    });
};

export const deleteTestDeviceByTestId = <ThrowOnError extends boolean = false>(options: Options<DeleteTestDeviceByTestIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteTestDeviceByTestIdResponse, unknown, ThrowOnError>({
        url: '/test/device/{testId}',
        ...options
    });
};

export const postTestDeviceByTestIdClientsByClientIdWaitForError = <ThrowOnError extends boolean = false>(options: Options<PostTestDeviceByTestIdClientsByClientIdWaitForErrorData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostTestDeviceByTestIdClientsByClientIdWaitForErrorResponse, PostTestDeviceByTestIdClientsByClientIdWaitForErrorError, ThrowOnError>({
        url: '/test/device/{testId}/clients/{clientId}/wait-for-error',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};