/* tslint:disable */
/* eslint-disable */
/**
 * Nabto WebRTC Signaling
 * Development documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HttpError,
  PostV1ClientConnect200Response,
  PostV1ClientConnectRequest,
} from '../models/index';
import {
    HttpErrorFromJSON,
    HttpErrorToJSON,
    PostV1ClientConnect200ResponseFromJSON,
    PostV1ClientConnect200ResponseToJSON,
    PostV1ClientConnectRequestFromJSON,
    PostV1ClientConnectRequestToJSON,
} from '../models/index';

export interface PostV1ClientConnectOperationRequest {
    postV1ClientConnectRequest: PostV1ClientConnectRequest;
    authorization?: string;
}

/**
 * 
 */
export class ClientsApi extends runtime.BaseAPI {

    /**
     * Allow clients to connect to devices
     */
    async postV1ClientConnectRaw(requestParameters: PostV1ClientConnectOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostV1ClientConnect200Response>> {
        if (requestParameters['postV1ClientConnectRequest'] == null) {
            throw new runtime.RequiredError(
                'postV1ClientConnectRequest',
                'Required parameter "postV1ClientConnectRequest" was null or undefined when calling postV1ClientConnect().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['authorization'] != null) {
            headerParameters['authorization'] = String(requestParameters['authorization']);
        }

        const response = await this.request({
            path: `/v1/client/connect`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PostV1ClientConnectRequestToJSON(requestParameters['postV1ClientConnectRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PostV1ClientConnect200ResponseFromJSON(jsonValue));
    }

    /**
     * Allow clients to connect to devices
     */
    async postV1ClientConnect(requestParameters: PostV1ClientConnectOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostV1ClientConnect200Response> {
        const response = await this.postV1ClientConnectRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
