/* tslint:disable */
/* eslint-disable */
/**
 * Nabto WebRTC Signaling
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HttpError,
  V1ClientConnect200Response,
  V1ClientConnectRequest,
} from '../models/index';
import {
    HttpErrorFromJSON,
    HttpErrorToJSON,
    V1ClientConnect200ResponseFromJSON,
    V1ClientConnect200ResponseToJSON,
    V1ClientConnectRequestFromJSON,
    V1ClientConnectRequestToJSON,
} from '../models/index';

export interface V1ClientConnectOperationRequest {
    v1ClientConnectRequest: V1ClientConnectRequest;
    authorization?: string;
}

/**
 * 
 */
export class ClientApi extends runtime.BaseAPI {

    /**
     */
    async v1ClientConnectRaw(requestParameters: V1ClientConnectOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1ClientConnect200Response>> {
        if (requestParameters['v1ClientConnectRequest'] == null) {
            throw new runtime.RequiredError(
                'v1ClientConnectRequest',
                'Required parameter "v1ClientConnectRequest" was null or undefined when calling v1ClientConnect().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['authorization'] != null) {
            headerParameters['authorization'] = String(requestParameters['authorization']);
        }


        let urlPath = `/v1/client/connect`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1ClientConnectRequestToJSON(requestParameters['v1ClientConnectRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1ClientConnect200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async v1ClientConnect(requestParameters: V1ClientConnectOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1ClientConnect200Response> {
        const response = await this.v1ClientConnectRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
