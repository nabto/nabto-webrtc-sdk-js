// This file is auto-generated by @hey-api/openapi-ts

export type PostV1ClientConnectData = {
    body: {
        deviceId: string;
        productId: string;
    };
    headers?: {
        authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/v1/client/connect';
};

export type PostV1ClientConnectErrors = {
    /**
     * failure
     */
    400: {
        message?: string;
    };
    /**
     * failure
     */
    404: {
        message?: string;
    };
};

export type PostV1ClientConnectError = PostV1ClientConnectErrors[keyof PostV1ClientConnectErrors];

export type PostV1ClientConnectResponses = {
    /**
     * success
     */
    200: {
        signalingUrl: string;
        deviceOnline: boolean;
        channelId: string;
        extra_field_in_the_response?: string;
    };
};

export type PostV1ClientConnectResponse = PostV1ClientConnectResponses[keyof PostV1ClientConnectResponses];

export type PostV1DeviceConnectData = {
    body: {
        deviceId: string;
        productId: string;
    };
    headers: {
        authorization: string;
    };
    path?: never;
    query?: never;
    url: '/v1/device/connect';
};

export type PostV1DeviceConnectErrors = {
    /**
     * failure
     */
    400: {
        message?: string;
    };
    /**
     * failure
     */
    401: {
        message?: string;
    };
    /**
     * failure
     */
    403: {
        message?: string;
    };
    /**
     * failure
     */
    404: {
        message?: string;
    };
};

export type PostV1DeviceConnectError = PostV1DeviceConnectErrors[keyof PostV1DeviceConnectErrors];

export type PostV1DeviceConnectResponses = {
    /**
     * success
     */
    200: {
        signalingUrl: string;
        extra_field_in_the_response?: string;
    };
};

export type PostV1DeviceConnectResponse = PostV1DeviceConnectResponses[keyof PostV1DeviceConnectResponses];

export type PostTestClientData = {
    body: {
        failHttp?: boolean;
        failWs?: boolean;
        /**
         * specify the endpoint url the server returns in the test create response and the websocket url. Format http://<ip>:<port>
         */
        endpointUrl?: string;
        extraClientConnectResponseData?: boolean;
        /**
         * Set to true to force the client to use an access token when connecting
         */
        requireAccessToken?: boolean;
    };
    path?: never;
    query?: never;
    url: '/test/client/';
};

export type PostTestClientErrors = {
    /**
     * failure
     */
    400: string;
};

export type PostTestClientError = PostTestClientErrors[keyof PostTestClientErrors];

export type PostTestClientResponses = {
    /**
     * success
     */
    200: {
        productId: string;
        deviceId: string;
        endpointUrl: string;
        testId: string;
        accessToken: string;
    };
};

export type PostTestClientResponse = PostTestClientResponses[keyof PostTestClientResponses];

export type PostTestClientByTestIdConnectDeviceData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/connect-device';
};

export type PostTestClientByTestIdConnectDeviceErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdConnectDeviceError = PostTestClientByTestIdConnectDeviceErrors[keyof PostTestClientByTestIdConnectDeviceErrors];

export type PostTestClientByTestIdConnectDeviceResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestClientByTestIdConnectDeviceResponse = PostTestClientByTestIdConnectDeviceResponses[keyof PostTestClientByTestIdConnectDeviceResponses];

export type PostTestClientByTestIdDisconnectDeviceData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/disconnect-device';
};

export type PostTestClientByTestIdDisconnectDeviceErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdDisconnectDeviceError = PostTestClientByTestIdDisconnectDeviceErrors[keyof PostTestClientByTestIdDisconnectDeviceErrors];

export type PostTestClientByTestIdDisconnectDeviceResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestClientByTestIdDisconnectDeviceResponse = PostTestClientByTestIdDisconnectDeviceResponses[keyof PostTestClientByTestIdDisconnectDeviceResponses];

export type PostTestClientByTestIdDropDeviceMessagesData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/drop-device-messages';
};

export type PostTestClientByTestIdDropDeviceMessagesErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdDropDeviceMessagesError = PostTestClientByTestIdDropDeviceMessagesErrors[keyof PostTestClientByTestIdDropDeviceMessagesErrors];

export type PostTestClientByTestIdDropDeviceMessagesResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestClientByTestIdDropDeviceMessagesResponse = PostTestClientByTestIdDropDeviceMessagesResponses[keyof PostTestClientByTestIdDropDeviceMessagesResponses];

export type PostTestClientByTestIdDisconnectClientData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/disconnect-client';
};

export type PostTestClientByTestIdDisconnectClientErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdDisconnectClientError = PostTestClientByTestIdDisconnectClientErrors[keyof PostTestClientByTestIdDisconnectClientErrors];

export type PostTestClientByTestIdDisconnectClientResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestClientByTestIdDisconnectClientResponse = PostTestClientByTestIdDisconnectClientResponses[keyof PostTestClientByTestIdDisconnectClientResponses];

export type PostTestClientByTestIdDropClientMessagesData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/drop-client-messages';
};

export type PostTestClientByTestIdDropClientMessagesErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdDropClientMessagesError = PostTestClientByTestIdDropClientMessagesErrors[keyof PostTestClientByTestIdDropClientMessagesErrors];

export type PostTestClientByTestIdDropClientMessagesResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestClientByTestIdDropClientMessagesResponse = PostTestClientByTestIdDropClientMessagesResponses[keyof PostTestClientByTestIdDropClientMessagesResponses];

export type PostTestClientByTestIdWaitForDeviceMessagesData = {
    body: {
        messages: Array<unknown>;
        timeout: number;
    };
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/wait-for-device-messages';
};

export type PostTestClientByTestIdWaitForDeviceMessagesErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdWaitForDeviceMessagesError = PostTestClientByTestIdWaitForDeviceMessagesErrors[keyof PostTestClientByTestIdWaitForDeviceMessagesErrors];

export type PostTestClientByTestIdWaitForDeviceMessagesResponses = {
    /**
     * success
     */
    200: {
        messages?: Array<unknown>;
    };
};

export type PostTestClientByTestIdWaitForDeviceMessagesResponse = PostTestClientByTestIdWaitForDeviceMessagesResponses[keyof PostTestClientByTestIdWaitForDeviceMessagesResponses];

export type PostTestClientByTestIdWaitForDeviceErrorData = {
    body: {
        timeout: number;
    };
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/wait-for-device-error';
};

export type PostTestClientByTestIdWaitForDeviceErrorErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdWaitForDeviceErrorError = PostTestClientByTestIdWaitForDeviceErrorErrors[keyof PostTestClientByTestIdWaitForDeviceErrorErrors];

export type PostTestClientByTestIdWaitForDeviceErrorResponses = {
    /**
     * success
     */
    200: {
        error?: {
            code: string;
            message?: string;
        };
    };
};

export type PostTestClientByTestIdWaitForDeviceErrorResponse = PostTestClientByTestIdWaitForDeviceErrorResponses[keyof PostTestClientByTestIdWaitForDeviceErrorResponses];

export type PostTestClientByTestIdSendDeviceMessagesData = {
    body: {
        messages: Array<unknown>;
    };
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/send-device-messages';
};

export type PostTestClientByTestIdSendDeviceMessagesErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdSendDeviceMessagesError = PostTestClientByTestIdSendDeviceMessagesErrors[keyof PostTestClientByTestIdSendDeviceMessagesErrors];

export type PostTestClientByTestIdSendDeviceMessagesResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestClientByTestIdSendDeviceMessagesResponse = PostTestClientByTestIdSendDeviceMessagesResponses[keyof PostTestClientByTestIdSendDeviceMessagesResponses];

export type PostTestClientByTestIdSendDeviceErrorData = {
    body: {
        errorCode: string;
        errorMessage?: string;
    };
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/send-device-error';
};

export type PostTestClientByTestIdSendDeviceErrorErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdSendDeviceErrorError = PostTestClientByTestIdSendDeviceErrorErrors[keyof PostTestClientByTestIdSendDeviceErrorErrors];

export type PostTestClientByTestIdSendDeviceErrorResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestClientByTestIdSendDeviceErrorResponse = PostTestClientByTestIdSendDeviceErrorResponses[keyof PostTestClientByTestIdSendDeviceErrorResponses];

export type PostTestClientByTestIdSendNewMessageTypeData = {
    body: {
        [key: string]: never;
    };
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/send-new-message-type';
};

export type PostTestClientByTestIdSendNewMessageTypeErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdSendNewMessageTypeError = PostTestClientByTestIdSendNewMessageTypeErrors[keyof PostTestClientByTestIdSendNewMessageTypeErrors];

export type PostTestClientByTestIdSendNewMessageTypeResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestClientByTestIdSendNewMessageTypeResponse = PostTestClientByTestIdSendNewMessageTypeResponses[keyof PostTestClientByTestIdSendNewMessageTypeResponses];

export type PostTestClientByTestIdSendNewFieldInKnownMessageTypeData = {
    body: {
        [key: string]: unknown;
    };
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/send-new-field-in-known-message-type';
};

export type PostTestClientByTestIdSendNewFieldInKnownMessageTypeErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdSendNewFieldInKnownMessageTypeError = PostTestClientByTestIdSendNewFieldInKnownMessageTypeErrors[keyof PostTestClientByTestIdSendNewFieldInKnownMessageTypeErrors];

export type PostTestClientByTestIdSendNewFieldInKnownMessageTypeResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestClientByTestIdSendNewFieldInKnownMessageTypeResponse = PostTestClientByTestIdSendNewFieldInKnownMessageTypeResponses[keyof PostTestClientByTestIdSendNewFieldInKnownMessageTypeResponses];

export type PostTestClientByTestIdGetActiveWebsocketsData = {
    body: {
        [key: string]: never;
    };
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}/get-active-websockets';
};

export type PostTestClientByTestIdGetActiveWebsocketsErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestClientByTestIdGetActiveWebsocketsError = PostTestClientByTestIdGetActiveWebsocketsErrors[keyof PostTestClientByTestIdGetActiveWebsocketsErrors];

export type PostTestClientByTestIdGetActiveWebsocketsResponses = {
    /**
     * success
     */
    200: {
        activeWebSockets: number;
    };
};

export type PostTestClientByTestIdGetActiveWebsocketsResponse = PostTestClientByTestIdGetActiveWebsocketsResponses[keyof PostTestClientByTestIdGetActiveWebsocketsResponses];

export type DeleteTestClientByTestIdData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/client/{testId}';
};

export type DeleteTestClientByTestIdResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteTestClientByTestIdResponse = DeleteTestClientByTestIdResponses[keyof DeleteTestClientByTestIdResponses];

export type PostTestDeviceData = {
    body: {
        failHttp?: boolean;
        failWs?: boolean;
        extraDeviceConnectResponseData?: boolean;
    };
    path?: never;
    query?: never;
    url: '/test/device/';
};

export type PostTestDeviceErrors = {
    /**
     * failure
     */
    400: string;
};

export type PostTestDeviceError = PostTestDeviceErrors[keyof PostTestDeviceErrors];

export type PostTestDeviceResponses = {
    /**
     * success
     */
    200: {
        productId: string;
        deviceId: string;
        endpointUrl: string;
        testId: string;
        accessToken: string;
    };
};

export type PostTestDeviceResponse = PostTestDeviceResponses[keyof PostTestDeviceResponses];

export type PostTestDeviceByTestIdClientsData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/device/{testId}/clients';
};

export type PostTestDeviceByTestIdClientsErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdClientsError = PostTestDeviceByTestIdClientsErrors[keyof PostTestDeviceByTestIdClientsErrors];

export type PostTestDeviceByTestIdClientsResponses = {
    /**
     * success
     */
    200: {
        clientId: string;
    };
};

export type PostTestDeviceByTestIdClientsResponse = PostTestDeviceByTestIdClientsResponses[keyof PostTestDeviceByTestIdClientsResponses];

export type PostTestDeviceByTestIdClientsByClientIdConnectData = {
    body?: never;
    path: {
        testId: string;
        clientId: string;
    };
    query?: never;
    url: '/test/device/{testId}/clients/{clientId}/connect';
};

export type PostTestDeviceByTestIdClientsByClientIdConnectErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdClientsByClientIdConnectError = PostTestDeviceByTestIdClientsByClientIdConnectErrors[keyof PostTestDeviceByTestIdClientsByClientIdConnectErrors];

export type PostTestDeviceByTestIdClientsByClientIdConnectResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestDeviceByTestIdClientsByClientIdConnectResponse = PostTestDeviceByTestIdClientsByClientIdConnectResponses[keyof PostTestDeviceByTestIdClientsByClientIdConnectResponses];

export type PostTestDeviceByTestIdClientsByClientIdDisconnectData = {
    body?: never;
    path: {
        testId: string;
        clientId: string;
    };
    query?: never;
    url: '/test/device/{testId}/clients/{clientId}/disconnect';
};

export type PostTestDeviceByTestIdClientsByClientIdDisconnectErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdClientsByClientIdDisconnectError = PostTestDeviceByTestIdClientsByClientIdDisconnectErrors[keyof PostTestDeviceByTestIdClientsByClientIdDisconnectErrors];

export type PostTestDeviceByTestIdClientsByClientIdDisconnectResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestDeviceByTestIdClientsByClientIdDisconnectResponse = PostTestDeviceByTestIdClientsByClientIdDisconnectResponses[keyof PostTestDeviceByTestIdClientsByClientIdDisconnectResponses];

export type PostTestDeviceByTestIdClientsByClientIdDropClientMessagesData = {
    body?: never;
    path: {
        testId: string;
        clientId: string;
    };
    query?: never;
    url: '/test/device/{testId}/clients/{clientId}/drop-client-messages';
};

export type PostTestDeviceByTestIdClientsByClientIdDropClientMessagesErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdClientsByClientIdDropClientMessagesError = PostTestDeviceByTestIdClientsByClientIdDropClientMessagesErrors[keyof PostTestDeviceByTestIdClientsByClientIdDropClientMessagesErrors];

export type PostTestDeviceByTestIdClientsByClientIdDropClientMessagesResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestDeviceByTestIdClientsByClientIdDropClientMessagesResponse = PostTestDeviceByTestIdClientsByClientIdDropClientMessagesResponses[keyof PostTestDeviceByTestIdClientsByClientIdDropClientMessagesResponses];

export type PostTestDeviceByTestIdDisconnectDeviceData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/device/{testId}/disconnect-device';
};

export type PostTestDeviceByTestIdDisconnectDeviceErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdDisconnectDeviceError = PostTestDeviceByTestIdDisconnectDeviceErrors[keyof PostTestDeviceByTestIdDisconnectDeviceErrors];

export type PostTestDeviceByTestIdDisconnectDeviceResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestDeviceByTestIdDisconnectDeviceResponse = PostTestDeviceByTestIdDisconnectDeviceResponses[keyof PostTestDeviceByTestIdDisconnectDeviceResponses];

export type PostTestDeviceByTestIdDropDeviceMessagesData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/device/{testId}/drop-device-messages';
};

export type PostTestDeviceByTestIdDropDeviceMessagesErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdDropDeviceMessagesError = PostTestDeviceByTestIdDropDeviceMessagesErrors[keyof PostTestDeviceByTestIdDropDeviceMessagesErrors];

export type PostTestDeviceByTestIdDropDeviceMessagesResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestDeviceByTestIdDropDeviceMessagesResponse = PostTestDeviceByTestIdDropDeviceMessagesResponses[keyof PostTestDeviceByTestIdDropDeviceMessagesResponses];

export type PostTestDeviceByTestIdClientsByClientIdWaitForMessagesData = {
    body: {
        messages: Array<unknown>;
        timeout: number;
    };
    path: {
        testId: string;
        clientId: string;
    };
    query?: never;
    url: '/test/device/{testId}/clients/{clientId}/wait-for-messages';
};

export type PostTestDeviceByTestIdClientsByClientIdWaitForMessagesErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdClientsByClientIdWaitForMessagesError = PostTestDeviceByTestIdClientsByClientIdWaitForMessagesErrors[keyof PostTestDeviceByTestIdClientsByClientIdWaitForMessagesErrors];

export type PostTestDeviceByTestIdClientsByClientIdWaitForMessagesResponses = {
    /**
     * success
     */
    200: {
        messages?: Array<unknown>;
    };
};

export type PostTestDeviceByTestIdClientsByClientIdWaitForMessagesResponse = PostTestDeviceByTestIdClientsByClientIdWaitForMessagesResponses[keyof PostTestDeviceByTestIdClientsByClientIdWaitForMessagesResponses];

export type PostTestDeviceByTestIdClientsByClientIdSendMessagesData = {
    body: {
        messages: Array<unknown>;
    };
    path: {
        testId: string;
        clientId: string;
    };
    query?: never;
    url: '/test/device/{testId}/clients/{clientId}/send-messages';
};

export type PostTestDeviceByTestIdClientsByClientIdSendMessagesErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdClientsByClientIdSendMessagesError = PostTestDeviceByTestIdClientsByClientIdSendMessagesErrors[keyof PostTestDeviceByTestIdClientsByClientIdSendMessagesErrors];

export type PostTestDeviceByTestIdClientsByClientIdSendMessagesResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestDeviceByTestIdClientsByClientIdSendMessagesResponse = PostTestDeviceByTestIdClientsByClientIdSendMessagesResponses[keyof PostTestDeviceByTestIdClientsByClientIdSendMessagesResponses];

export type PostTestDeviceByTestIdClientsByClientIdSendErrorData = {
    body: {
        errorCode: string;
        errorMessage?: string;
    };
    path: {
        testId: string;
        clientId: string;
    };
    query?: never;
    url: '/test/device/{testId}/clients/{clientId}/send-error';
};

export type PostTestDeviceByTestIdClientsByClientIdSendErrorErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdClientsByClientIdSendErrorError = PostTestDeviceByTestIdClientsByClientIdSendErrorErrors[keyof PostTestDeviceByTestIdClientsByClientIdSendErrorErrors];

export type PostTestDeviceByTestIdClientsByClientIdSendErrorResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestDeviceByTestIdClientsByClientIdSendErrorResponse = PostTestDeviceByTestIdClientsByClientIdSendErrorResponses[keyof PostTestDeviceByTestIdClientsByClientIdSendErrorResponses];

export type PostTestDeviceByTestIdSendNewMessageTypeData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/device/{testId}/send-new-message-type';
};

export type PostTestDeviceByTestIdSendNewMessageTypeErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdSendNewMessageTypeError = PostTestDeviceByTestIdSendNewMessageTypeErrors[keyof PostTestDeviceByTestIdSendNewMessageTypeErrors];

export type PostTestDeviceByTestIdSendNewMessageTypeResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type PostTestDeviceByTestIdSendNewMessageTypeResponse = PostTestDeviceByTestIdSendNewMessageTypeResponses[keyof PostTestDeviceByTestIdSendNewMessageTypeResponses];

export type DeleteTestDeviceByTestIdData = {
    body?: never;
    path: {
        testId: string;
    };
    query?: never;
    url: '/test/device/{testId}';
};

export type DeleteTestDeviceByTestIdResponses = {
    /**
     * success
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteTestDeviceByTestIdResponse = DeleteTestDeviceByTestIdResponses[keyof DeleteTestDeviceByTestIdResponses];

export type PostTestDeviceByTestIdClientsByClientIdWaitForErrorData = {
    body: {
        timeout: number;
    };
    path: {
        testId: string;
        clientId: string;
    };
    query?: never;
    url: '/test/device/{testId}/clients/{clientId}/wait-for-error';
};

export type PostTestDeviceByTestIdClientsByClientIdWaitForErrorErrors = {
    /**
     * failure
     */
    404: string;
};

export type PostTestDeviceByTestIdClientsByClientIdWaitForErrorError = PostTestDeviceByTestIdClientsByClientIdWaitForErrorErrors[keyof PostTestDeviceByTestIdClientsByClientIdWaitForErrorErrors];

export type PostTestDeviceByTestIdClientsByClientIdWaitForErrorResponses = {
    /**
     * success
     */
    200: {
        errorCode: string;
        errorMessage?: string;
    };
};

export type PostTestDeviceByTestIdClientsByClientIdWaitForErrorResponse = PostTestDeviceByTestIdClientsByClientIdWaitForErrorResponses[keyof PostTestDeviceByTestIdClientsByClientIdWaitForErrorResponses];

export type PostV1IceServersData = {
    body: {
        deviceId: string;
        productId: string;
    };
    headers?: {
        authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/v1/ice-servers';
};

export type PostV1IceServersErrors = {
    /**
     * failure
     */
    400: {
        message?: string;
    };
    /**
     * failure
     */
    401: {
        message?: string;
    };
    /**
     * failure
     */
    403: {
        message?: string;
    };
    /**
     * failure
     */
    404: {
        message?: string;
    };
};

export type PostV1IceServersError = PostV1IceServersErrors[keyof PostV1IceServersErrors];

export type PostV1IceServersResponses = {
    200: {
        iceServers: Array<{
            username?: string;
            credential?: string;
            urls: Array<string>;
        }>;
    };
};

export type PostV1IceServersResponse = PostV1IceServersResponses[keyof PostV1IceServersResponses];

export type ClientOptions = {
    baseUrl: 'http://127.0.0.1:13745' | (string & {});
};