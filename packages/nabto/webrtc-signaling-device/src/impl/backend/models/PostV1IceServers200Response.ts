/* tslint:disable */
/* eslint-disable */
/**
 * Nabto WebRTC Signaling
 * Development documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostV1IceServers200ResponseIceServersInner } from './PostV1IceServers200ResponseIceServersInner';
import {
    PostV1IceServers200ResponseIceServersInnerFromJSON,
    PostV1IceServers200ResponseIceServersInnerFromJSONTyped,
    PostV1IceServers200ResponseIceServersInnerToJSON,
    PostV1IceServers200ResponseIceServersInnerToJSONTyped,
} from './PostV1IceServers200ResponseIceServersInner';

/**
 * 
 * @export
 * @interface PostV1IceServers200Response
 */
export interface PostV1IceServers200Response {
    /**
     * 
     * @type {Array<PostV1IceServers200ResponseIceServersInner>}
     * @memberof PostV1IceServers200Response
     */
    iceServers?: Array<PostV1IceServers200ResponseIceServersInner>;
}

/**
 * Check if a given object implements the PostV1IceServers200Response interface.
 */
export function instanceOfPostV1IceServers200Response(value: object): value is PostV1IceServers200Response {
    return true;
}

export function PostV1IceServers200ResponseFromJSON(json: any): PostV1IceServers200Response {
    return PostV1IceServers200ResponseFromJSONTyped(json, false);
}

export function PostV1IceServers200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostV1IceServers200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'iceServers': json['iceServers'] == null ? undefined : ((json['iceServers'] as Array<any>).map(PostV1IceServers200ResponseIceServersInnerFromJSON)),
    };
}

  export function PostV1IceServers200ResponseToJSON(json: any): PostV1IceServers200Response {
      return PostV1IceServers200ResponseToJSONTyped(json, false);
  }

  export function PostV1IceServers200ResponseToJSONTyped(value?: PostV1IceServers200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'iceServers': value['iceServers'] == null ? undefined : ((value['iceServers'] as Array<any>).map(PostV1IceServers200ResponseIceServersInnerToJSON)),
    };
}

